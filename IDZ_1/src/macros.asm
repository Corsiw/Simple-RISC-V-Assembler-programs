.include "io.asm"
.include "array_utils.asm"

# -----------------------------------------------------
# PRINT_STR(adr)
# ѕечать строки.
# ѕараметр:
#   adr Ц адрес ASCIIZ-строки
# ѕередача:
#   на стек по смещению 12(sp).
# ¬ызов:
#   jal print_string
# -----------------------------------------------------
.macro PRINT_STR(%adr)
	addi sp sp -16
	la t0 %adr
	sw t0 12(sp)
	jal print_string
	addi sp sp 16
.end_macro


# -----------------------------------------------------
# READ_INT(reg)
# „тение целого числа с клавиатуры.
# ¬озврат:
#   введЄнное число - в регистр reg
# ѕередача через стек не требуетс€,
# т.к. аргументов у подпрограммы нет.
# -----------------------------------------------------
.macro READ_INT(%reg)
	jal read_int
	mv %reg a0
.end_macro


# -----------------------------------------------------
# PRINT_INT(adr)
# ѕечать одного числа.
# ѕараметр:
#   adr Ц адрес переменной с числом
# ѕередача:
#   на стек по смещению 12(sp).
# ¬ызов:
#   jal print_int
# -----------------------------------------------------
.macro PRINT_INT(%adr)
	addi sp sp -16
	sw %adr 12(sp)
	jal print_int
	addi sp sp 16
.end_macro


# -----------------------------------------------------
# READ_ARR(N, adr)
# ¬вод массива целых чисел.
# ѕараметры:
#   N   Ц количество элементов массива
#   adr Ц адрес массива
# ѕередача:
#   N   - 12(sp)
#   adr - 8(sp)
# ¬ызов:
#   jal read_array
# -----------------------------------------------------
.macro READ_ARR(%N, %adr)
	addi sp sp -16
	sw %N 12(sp)
	sw %adr 8(sp)
	jal read_array
	addi sp sp 16
.end_macro


# -----------------------------------------------------
# PRINT_ARR(N, adr)
# ѕечать массива целых чисел.
# ѕараметры:
#   N   Ц количество элементов
#   adr Ц адрес массива
# ѕередача:
#   N   - 12(sp)
#   adr - 8(sp)
# ¬ызов:
#   jal print_array
# -----------------------------------------------------
.macro PRINT_ARR(%N, %adr)
	addi sp sp -16
	sw %N 12(sp)
	sw %adr 8(sp)
	jal print_array
	addi sp sp 16
.end_macro


# -----------------------------------------------------
# FORM_ARR(N, Aadr, Badr)
# ‘ормирование массива B на основе массива A.
# ѕараметры:
#   N    Ц количество элементов
#   Aadr Ц адрес массива A (исходные данные)
#   Badr Ц адрес массива B (результат)
# ѕередача:
#   N    - 12(sp)
#   Aadr - 8(sp)
#   Badr - 4(sp)
# ¬ызов:
#   jal form_arrayB
# -----------------------------------------------------
.macro FORM_ARR(%N, %Aadr, %Badr)
	addi sp sp -16
	sw %N 12(sp)
	sw %Aadr 8(sp)
	sw %Badr 4(sp)
	jal form_arrayB
	addi sp sp 16
.end_macro
